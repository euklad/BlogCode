// <auto-generated />
using System;
using CrmLightDemoApp.Onion.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrmLightDemoApp.Migrations
{
    [DbContext(typeof(CrmContext))]
    [Migration("20230101101634_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CrmLightDemoApp.Onion.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("CrmLightDemoApp.Onion.Domain.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("CrmLightDemoApp.Onion.Domain.PersonCompanyLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("LinkTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonCompanyLinkTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonCompanyLinkTypeId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonCompanyLink");
                });

            modelBuilder.Entity("CrmLightDemoApp.Onion.Domain.PersonCompanyLinkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonCompanyLinkType");
                });

            modelBuilder.Entity("CrmLightDemoApp.Onion.Domain.PersonCompanyLink", b =>
                {
                    b.HasOne("CrmLightDemoApp.Onion.Domain.Company", null)
                        .WithMany("RefPersonCompanyLink")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrmLightDemoApp.Onion.Domain.PersonCompanyLinkType", null)
                        .WithMany("RefPersonCompanyLink")
                        .HasForeignKey("PersonCompanyLinkTypeId");

                    b.HasOne("CrmLightDemoApp.Onion.Domain.Person", null)
                        .WithMany("RefPersonCompanyLink")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrmLightDemoApp.Onion.Domain.Company", b =>
                {
                    b.Navigation("RefPersonCompanyLink");
                });

            modelBuilder.Entity("CrmLightDemoApp.Onion.Domain.Person", b =>
                {
                    b.Navigation("RefPersonCompanyLink");
                });

            modelBuilder.Entity("CrmLightDemoApp.Onion.Domain.PersonCompanyLinkType", b =>
                {
                    b.Navigation("RefPersonCompanyLink");
                });
#pragma warning restore 612, 618
        }
    }
}
